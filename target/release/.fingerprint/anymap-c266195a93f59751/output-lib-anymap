{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"adding an auto trait `Send` to a trait object in a pointer cast may cause UB later on","code":{"code":"ptr_cast_add_auto_to_object","explanation":null},"level":"warning","spans":[{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":1714,"byte_end":1728,"line_start":37,"line_end":37,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"                unsafe { Box::from_raw(raw as *mut $t) }","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":5589,"byte_end":5621,"line_start":144,"line_end":144,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"impl_clone!(dyn CloneAny + Send);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_clone!","def_site_span":{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":392,"byte_end":415,"line_start":19,"line_end":19,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_clone {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #127323 <https://github.com/rust-lang/rust/issues/127323>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: adding an auto trait `Send` to a trait object in a pointer cast may cause UB later on\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs:37:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                unsafe { Box::from_raw(raw as *mut $t) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_clone!(dyn CloneAny + Send);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #127323 <https://github.com/rust-lang/rust/issues/127323>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"adding auto traits `Send` and `Sync` to a trait object in a pointer cast may cause UB later on","code":{"code":"ptr_cast_add_auto_to_object","explanation":null},"level":"warning","spans":[{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":1714,"byte_end":1728,"line_start":37,"line_end":37,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"                unsafe { Box::from_raw(raw as *mut $t) }","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":5623,"byte_end":5662,"line_start":145,"line_end":145,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"impl_clone!(dyn CloneAny + Send + Sync);","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_clone!","def_site_span":{"file_name":"/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs","byte_start":392,"byte_end":415,"line_start":19,"line_end":19,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_clone {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #127323 <https://github.com/rust-lang/rust/issues/127323>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: adding auto traits `Send` and `Sync` to a trait object in a pointer cast may cause UB later on\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/k/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anymap-1.0.0-beta.2/src/any.rs:37:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                unsafe { Box::from_raw(raw as *mut $t) }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl_clone!(dyn CloneAny + Send + Sync);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #127323 <https://github.com/rust-lang/rust/issues/127323>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_clone` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
